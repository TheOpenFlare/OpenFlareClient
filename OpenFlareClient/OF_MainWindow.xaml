<Window x:Class="OpenFlareClient.OF_MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:OpenFlareClient"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        mc:Ignorable="d"
        Title="OpenFlare Client" Height="591.912" Width="329.411" Icon="{DynamicResource OpenFlareIcon}" Loaded="Window_Loaded" Closing="Window_Closing" Style="{DynamicResource OF_WindowStyle}">
        <Window.CommandBindings>
        <CommandBinding Command="{x:Static SystemCommands.CloseWindowCommand}" CanExecute="CanExecute" Executed="CloseWindow" />
        <CommandBinding Command="{x:Static SystemCommands.MaximizeWindowCommand}" CanExecute="CanResizeWindow" Executed="MaximizeWindow" />
        <CommandBinding Command="{x:Static SystemCommands.MinimizeWindowCommand}" CanExecute="CanMinimizeWindow" Executed="MinimizeWindow" />
        <CommandBinding Command="{x:Static SystemCommands.RestoreWindowCommand}" CanExecute="CanResizeWindow" Executed="RestoreWindow" />
    </Window.CommandBindings>
    <Window.Resources>   
        <DataTemplate x:Key="FriendsListTemplate">
            <Grid>
                <Grid.ContextMenu>
                    <ContextMenu>
                        <MenuItem x:Name="OF_MenuList_Remove_Friend" Tag="{Binding Jid}" Header="Remove" Click="OF_MenuList_Remove_Friend_Click"/>
                        <MenuItem x:Name="OF_MenuList_Accept_Friend" Tag="{Binding Jid}" Header="Accept" Click="OF_MenuList_Accept_Friend_Click" IsEnabled="{Binding Pending}"/>
                        <MenuItem x:Name="OF_MenuList_SendFile" Tag="{Binding Jid}" Header="Send File"/>
                    </ContextMenu>
                </Grid.ContextMenu>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Image Height="70" Width="70" Source="{Binding Avatar}" />
                <StackPanel Grid.Column="1">
                    <Label Height="Auto" Content="{Binding Name}"/>
                    <Label Height="Auto" Content="{Binding Status}" Background="#FF0068FF" HorizontalContentAlignment="Center" />
                    <Label Height="Auto" Content="{Binding StatusMessage}" Background="#CD0068FF" BorderBrush="#FF0068FF" BorderThickness="5"/>
                </StackPanel>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="GroupListTemplate">
            <Grid>
                <Label Height="Auto" Content="{Binding Name}"/>
            </Grid>
        </DataTemplate>
    </Window.Resources>
    <Grid Background="#FF333333">
        <Menu x:Name="menu" IsMainMenu="True" VerticalAlignment="Top">
            <Menu.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </Menu.ItemsPanel>
            <MenuItem Header="_File" Grid.Column="0" Template="{DynamicResource OF_MenuItemControlTemplate}">
                <MenuItem x:Name="OF_Menu_File_LogOut" Header="_Log Out" Click="OF_Menu_File_LogOut_Click" Template="{DynamicResource OF_MenuItemControlTemplate}"/>
                <MenuItem x:Name="OF_Menu_File_Exit" Header="_Exit" Click="ExitApp" Template="{DynamicResource OF_MenuItemControlTemplate}"/>
            </MenuItem>
            <MenuItem Header="_Options" Grid.Column="1" Template="{DynamicResource OF_MenuItemControlTemplate}">
                <MenuItem x:Name="OF_Menu_Options_Settings" Header="_Settings" Click="OpenSettings" Template="{DynamicResource OF_MenuItemControlTemplate}"/>
            </MenuItem>
            <MenuItem Header="_Add" HorizontalAlignment="Center" Grid.Column="2" Template="{DynamicResource OF_MenuItemControlTemplate}">
                <MenuItem x:Name="OF_Menu_Add_Friend" Header="_Friend" Click="OF_Menu_Add_Friend_Click" Template="{DynamicResource OF_MenuItemControlTemplate}"/>
            </MenuItem>
            <MenuItem Header="_Help"  HorizontalAlignment="Right" Grid.Column="3" Template="{DynamicResource OF_MenuItemControlTemplate}">
                <MenuItem x:Name="OF_Menu_Help_About" Header="_About" Click="OpenAbout" Template="{DynamicResource OF_MenuItemControlTemplate}"/>
            </MenuItem>
        </Menu>
        <tb:TaskbarIcon x:Name="OF_TaskbarIcon" ToolTipText="OpenFlare Client" IconSource="{DynamicResource OpenFlareIcon}" >
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <MenuItem x:Name="OF_NIMenu_Settings" Header="Settings" Click="OpenSettings"/>
                    <MenuItem x:Name="OF_NIMenu_About" Header="About" Click="OpenAbout"/>
                    <MenuItem x:Name="OF_NIMenu_Exit" Header="Exit" Click="ExitApp"/>
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>
        <Grid Background="#FF7A7A7A" Width="{Binding Width, ElementName=OF_Avatar}" Height="{Binding Height, ElementName=OF_Avatar}" HorizontalAlignment="Left" Margin="0,23,0,0" VerticalAlignment="Top" d:LayoutOverrides="LeftMargin, RightMargin">
            <Image x:Name="OF_Avatar" Height="78" Width="81" Source="{Binding XmppClientData.Avatar, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:OF_MainWindow}}}"/>
            <Grid.ContextMenu>
                <ContextMenu>
                    <MenuItem x:Name="OF_Menu_Set_Avatar" Header="Set" Click="OF_Menu_Set_Avatar_Click"/>
                </ContextMenu>
            </Grid.ContextMenu>
        </Grid>
        <ComboBox x:Name="OF_Status" VerticalContentAlignment="Center" Height="30" VerticalAlignment="Top" Margin="86,23,0,0" SelectionChanged="OF_Status_SelectionChanged" SelectedIndex="{Binding Settings.Status, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:OF_MainWindow}}}">
            <ComboBoxItem Content="Offline"/>
            <ComboBoxItem Content="Online"/>
            <ComboBoxItem Content="Away"/>
            <ComboBoxItem Content="Chat"/>
            <ComboBoxItem Content="Dnd"/>
            <ComboBoxItem Content="Xa"/>
            <ComboBox.ContextMenu>
                <ContextMenu>
                    <MenuItem x:Name="OF_Menu_Set_Status" Header="Set" Click="OF_Menu_Set_Status_Click"/>
                </ContextMenu>
            </ComboBox.ContextMenu>
        </ComboBox>
        <Canvas Margin="86,58,0,0" Height="18" VerticalAlignment="Top"  ClipToBounds="True" Name="OF_StatusCanvas" >
            <TextBlock x:Name="OF_StatusText" Margin="81,58,0,0" TextWrapping="Wrap" VerticalAlignment="Top" LostFocus="OF_StatusText_LostFocus" Text="{Binding Settings.StatusMessage,IsAsync=True, Mode=TwoWay, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:OF_MainWindow}}}" Height="18"/>
        </Canvas>
        <TabControl x:Name="OF_TabControl" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="0,106,0,0" Style="{DynamicResource OF_TabControlStyle}">
            <TabItem x:Name="OF_Friends" Header="Friends">
                <Grid>
                    <ListView x:Name="OF_FriendsList" MouseDoubleClick="OF_FriendsList_MouseDoubleClick"
                    DataContext="{Binding BuddiesList, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:OF_MainWindow}}}"
					ItemsSource="{Binding}" ItemTemplate="{DynamicResource FriendsListTemplate}" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" Background="#FF333333" BorderThickness="0">

                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                                <Setter Property="ToolTip">
                                    <Setter.Value>
                                        <StackPanel Grid.Column="1">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Text="Jid: " FontWeight="Bold" Grid.Column="0"/>
                                                <TextBlock Text="{Binding Jid}" Grid.Column="1"/>
                                            </Grid>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Text="Subscription State: " FontWeight="Bold" Grid.Column="0"/>
                                                <TextBlock Text="{Binding SubscriptionState}" Grid.Column="1"/>
                                            </Grid>
                                            <Grid Visibility="{Binding TuneTextVisibility}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Visibility="{Binding TuneTextVisibility}" Text="User Tune: " FontWeight="Bold" Grid.Column="0"/>
                                            </Grid>
                                            <Grid Visibility="{Binding TuneTextVisibility}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Visibility="{Binding TuneTextVisibility}" Text="Title: " FontWeight="Bold" Grid.Column="0" Margin="8,0,0,0"/>
                                                <TextBlock Visibility="{Binding TuneTextVisibility}" Text="{Binding MyTune.Title}" Grid.Column="1"/>
                                            </Grid>
                                            <Grid Visibility="{Binding TuneTextVisibility}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Visibility="{Binding TuneTextVisibility}" Text="Artist: " FontWeight="Bold" Grid.Column="0" Margin="8,0,0,0"/>
                                                <TextBlock Visibility="{Binding TuneTextVisibility}" Text="{Binding MyTune.Artist}" Grid.Column="1"/>
                                            </Grid>
                                            <Grid Visibility="{Binding TuneTextVisibility}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Visibility="{Binding TuneTextVisibility}" Text="Album: " FontWeight="Bold" Grid.Column="0" Margin="8,0,0,0"/>
                                                <TextBlock Visibility="{Binding TuneTextVisibility}" Text="{Binding MyTune.Source}" Grid.Column="1"/>
                                            </Grid>
                                        </StackPanel>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListView>
                </Grid>
            </TabItem>
            <TabItem x:Name="OF_Groups" Header="Groups">
                <Grid Background="#FFE5E5E5">
                    <ListView x:Name="OF_GroupsList" DataContext="{Binding AllGroupChats, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:OF_MainWindow}}}"
					ItemsSource="{Binding AllGroupChats, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:OF_MainWindow}}}" ItemTemplate="{DynamicResource GroupListTemplate}" MouseDoubleClick="OF_GroupsList_MouseDoubleClick" Background="#FF333333" BorderThickness="0"/>
                </Grid>
            </TabItem>
        </TabControl>
        <Canvas Margin="86,83,0,0" Height="18" VerticalAlignment="Top"  ClipToBounds="True" Name="OF_TuneCanvas" >
            <TextBlock x:Name="OF_TuneText" Margin="81,83,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Text="{Binding XmppClientData.TuneText, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:OF_MainWindow}}}" Height="18" />
        </Canvas>
        <Grid x:Name="OF_Login_Screen" Background="#FF333333" Visibility="Hidden">
            <TextBox x:Name="OF_UserName" Height="23" Margin="10,198,10,0" TextWrapping="Wrap" VerticalAlignment="Top" Text="{Binding Settings.UserName, IsAsync=True, Mode=TwoWay, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:OF_MainWindow}}}" TextChanged="OF_UserName_TextChanged"/>
            <PasswordBox x:Name="OF_Password" Height="23" Margin="10,226,10,0" VerticalAlignment="Top" PasswordChanged="OF_Password_PasswordChanged"/>
            <Button x:Name="OF_Login" Content="Login" Margin="179,254,10,0" VerticalAlignment="Top" Click="OF_Login_Click"/>
            <CheckBox x:Name="OF_AutoLogin" Content="Auto login" Margin="10,254,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="76" IsChecked="{Binding Settings.AutoConnect, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:OF_MainWindow}}, UpdateSourceTrigger=Default}" Click="OF_AutoLogin_Click"/>
            <Label x:Name="OF_XMPPSTATUS" Content="" Margin="10,278,10,0" VerticalAlignment="Top" HorizontalContentAlignment="Center"/>
        </Grid>
    </Grid>
</Window>